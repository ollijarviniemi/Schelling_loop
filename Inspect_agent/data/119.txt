String grammar

The term "string grammar" in computational linguistics (and computer languages) refers to the structure of a specific language, such that it can be formatted as a single continuous string of text, without the need to have line-breaks (or newlines) to alter the meaning. The appearance of any text in "column 1" (or any column) of a line does not change the meaning of that text in a string grammar. A string grammar can be used to describe the structure of some natural languages, such as English or French, as well as for some computer languages. Note that the string-based structure is for defining the grammar of a language, rather than the formatting of the language itself. The production rules, of the grammar, are in the form of continuous text strings. == Benefits of using a string grammar == When a string grammar is used to define a computer language, some string-grammar parsing tools and compiler- generator tools can be used to more easily create a compiler software system for that particular computer language. Because other grammars can be more difficult to use for parsing text written in a specific computer language, using a string grammar is a means to seek simplicity in language processing. == Unrelated terms that may be confused == Sometimes the word "string" precedes "grammar" in unrelated terms. An example is "address string grammar", which is a grammar for Internet Protocol address strings. Another is the term "numeric string grammar" which refers to numeric strings (strings which denote numbers or numerals). == See also == * Formal grammar * Tree-adjoining grammar * Context-free grammar * LALR == References == Category:Computational linguistics Category:Compiler construction 